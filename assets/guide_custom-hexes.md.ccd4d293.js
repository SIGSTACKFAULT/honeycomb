import{_ as s,c as n,o as a,a as o}from"./app.3f920d2d.js";var e="/honeycomb/assets/hex-dimensions.00d25239.webp";const d=JSON.parse('{"title":"Custom hexes","description":"","frontmatter":{},"headers":[{"level":2,"title":"Using defineHex()","slug":"using-definehex"},{"level":2,"title":"Custom properties","slug":"custom-properties"},{"level":2,"title":"Extending Hex manually","slug":"extending-hex-manually"}],"relativePath":"guide/custom-hexes.md","lastUpdated":1660769118000}'),l={name:"guide/custom-hexes.md"},p=o(`<h1 id="custom-hexes" tabindex="-1">Custom hexes <a class="header-anchor" href="#custom-hexes" aria-hidden="true">#</a></h1><p>When you start using Honeycomb, you probably want a custom grid: hexes with a certain size, a pointy or flat top and some custom properties. Hexes have most properties in their prototype (for performance reasons) and the most important ones are the four <em><a href="/honeycomb/api/interfaces/HexSettings.html">settings</a></em>. All other properties of hexes are derived from these settings.</p><p>The <a href="/honeycomb/api/#defaultHexSettings">default hex settings</a> are probably not what you need:</p><div class="language-typescript"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> defaultHexSettings</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HexSettings</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">dimensions</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">xRadius</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">yRadius</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// these make for tiny hexes</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">orientation</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Orientation</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">POINTY</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// pointy top</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">origin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">y</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// the center of the hex</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">offset</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// how rows or columns of hexes are placed relative to each other</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>You can configure these settings using the <a href="/honeycomb/api/#defineHex"><code>defineHex()</code></a> helper or extending the <a href="/honeycomb/api/classes/Hex.html"><code>Hex</code></a> class yourself.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>In JavaScript a class is actually a function that should be called with the <code>new</code> keyword. It then returns an object (an &quot;instance&quot;) with the methods defined in the class in its prototype. Read more on <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain" target="_blank" rel="noopener noreferrer">MDN</a>.</p></div><h2 id="using-definehex" tabindex="-1">Using <code>defineHex()</code> <a class="header-anchor" href="#using-definehex" aria-hidden="true">#</a></h2><p>This function accepts <a href="/honeycomb/api/interfaces/HexOptions.html"><em>hex options</em></a> and returns a class that extends from <a href="/honeycomb/api/classes/Hex.html"><code>Hex</code></a>.</p><div class="language-typescript"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">// CustomHex is a class (constructor function)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> CustomHex </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineHex</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">dimensions</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">orientation</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Orientation</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">FLAT</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">origin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">topLeft</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">offset</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// hex is an instance</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> hex </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">CustomHex</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// hex instances created with CustomHex now have these hex settings:</span></span>
<span class="line"><span style="color:#A6ACCD;">hex</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">dimensions  </span><span style="color:#676E95;font-style:italic;">// { xRadius: 30, yRadius: 30 }</span></span>
<span class="line"><span style="color:#A6ACCD;">hex</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">orientation </span><span style="color:#676E95;font-style:italic;">// &#39;FLAT&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">hex</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">origin      </span><span style="color:#676E95;font-style:italic;">// { x: -30, y: -25.98\u2026 }, relative to the center of the hex</span></span>
<span class="line"><span style="color:#A6ACCD;">hex</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">offset      </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"></span></code></pre></div><p>As you can see, for <code>dimensions</code> you can pass a number, which is interpreted as the radius. A <a href="/honeycomb/api/interfaces/BoundingBox.html">bounding box</a> (an object with <code>width</code> and <code>height</code>) is also accepted.</p><img src="`+e+`" alt="Hex dimensions" style="background-color:#ccc;padding:1em;border-radius:0.5em;"><p>For <code>origin</code> the string <code>&#39;topLeft&#39;</code> is also valid, meaning the origin of the hex will be in the very top left corner. This is convenient when rendering hexes on screen and you treat a hex as a DOM element. DOM elements have their origin in their top left corner.</p><h2 id="custom-properties" tabindex="-1">Custom properties <a class="header-anchor" href="#custom-properties" aria-hidden="true">#</a></h2><p>Because <code>defineHex()</code> returns a class, you can simply extend that class to add your own properties and methods:</p><div class="language-typescript"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CustomHex</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineHex</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">dimensions</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">origin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">topLeft</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">get</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">prototypeProp</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">this property won&#39;t be present in the instance, only in the prototype</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// this property is present in the instance</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">instanceProp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// methods always exist in the prototype</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">customMethod</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>Methods and getters/setters exist in the prototype; they&#39;re shared by all hexes. It&#39;s recommended to use <strong>instance properties</strong> only for things specific to a single hex. For example, a hex&#39;s axial coordinates (<code>q</code> and <code>r</code>) are the only instance properties on the built-in <code>Hex</code> class.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If you have <code>strictPropertyInitialization</code> (or <code>strict</code>) enabled in your tsconfig, you&#39;ll get this typescript error:</p><blockquote><p>Property &#39;instanceProp&#39; has no initializer and is not definitely assigned in the constructor.</p></blockquote><p>You can fix this by making the property optional:</p><div class="language-typescript"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">instanceProp</span><span style="color:#89DDFF;">?:</span><span style="color:#A6ACCD;"> string</span></span>
<span class="line"></span></code></pre></div><p>Or add a <em>definite assignment assertion</em> to tell TypeScript that the property won&#39;t be <code>undefined</code>:</p><div class="language-typescript"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">instanceProp</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">: string</span></span>
<span class="line"></span></code></pre></div><p>See <a href="#custom-hex-creation">Custom hex creation</a> below to make sure the property will actually have a value.</p></div><h2 id="extending-hex-manually" tabindex="-1">Extending <code>Hex</code> manually <a class="header-anchor" href="#extending-hex-manually" aria-hidden="true">#</a></h2><p>If \u2013 for whatever reason \u2013 you don&#39;t want to use <code>defineHex()</code>, you can just extend <code>Hex</code> manually:</p><div class="language-typescript"><span class="copy"></span><div class="highlight-lines"><div class="highlighted">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><pre><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CustomHex</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Hex</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">get</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">dimensions</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Ellipse</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> xRadius</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> yRadius</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">30</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">get</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">orientation</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Orientation</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Orientation</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">FLAT</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">get</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">origin</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Point</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> x</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> y</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">25.98</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">get</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">offset</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HexOffset</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>Still want utilities for <code>dimensions</code> and <code>origin</code>? Use <code>createHexDimensions()</code> and <code>createHexOrigin()</code>:</p><div class="language-typescript"><span class="copy"></span><div class="highlight-lines"><br><br><div class="highlighted">\xA0</div><br><br><br><br><br><br><br><div class="highlighted">\xA0</div><br><br><br><br><br><br><br></div><pre><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">CustomHex</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Hex</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">get</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">dimensions</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Ellipse</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">createHexDimensions</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">30</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">get</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">orientation</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Orientation</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Orientation</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">FLAT</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">get</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">origin</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Point</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">createHexOrigin</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">topLeft</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">get</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">offset</span><span style="color:#89DDFF;">():</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HexOffset</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,22),t=[p];function c(r,y,i,F,D,C){return a(),n("div",null,t)}var h=s(l,[["render",c]]);export{d as __pageData,h as default};
