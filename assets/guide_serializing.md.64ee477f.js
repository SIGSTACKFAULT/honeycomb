import{_ as s,c as n,o as a,a as e}from"./app.b4c0def0.js";const C=JSON.parse('{"title":"(De)serializing","description":"","frontmatter":{},"headers":[{"level":2,"title":"Serializing","slug":"serializing"},{"level":2,"title":"Deserializing","slug":"deserializing"}],"relativePath":"guide/serializing.md","lastUpdated":1660508148000}'),o={name:"guide/serializing.md"},l=e(`<h1 id="de-serializing" tabindex="-1">(De)serializing <a class="header-anchor" href="#de-serializing" aria-hidden="true">#</a></h1><p>In JavaScript, serializing is usually done with <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify" target="_blank" rel="noreferrer"><code>JSON.stringify()</code></a> and deserializing with <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse" target="_blank" rel="noreferrer"><code>JSON.parse()</code></a>.</p><h2 id="serializing" tabindex="-1">Serializing <a class="header-anchor" href="#serializing" aria-hidden="true">#</a></h2><p><code>Grid</code> has a <code>toJSON()</code> method that&#39;s automatically called when passing a grid to <code>JSON.stringify()</code>. <code>toJSON()</code> returns an object with the <a href="/honeycomb/api/interfaces/HexSettings">hex settings</a> (dimensions, orientation, origin and offset) and all its hexes. When this object is <em>stringified</em> by <code>JSON.stringify()</code>, the resulting string contains only the essential information to represent the grid.</p><div class="language-typescript line-numbers-mode"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> Hex </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineHex</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">dimensions</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">orientation</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Orientation</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">FLAT </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> grid </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Grid</span><span style="color:#A6ACCD;">(Hex</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">rectangle</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">grid</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toJSON</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#676E95;">// {</span></span>
<span class="line"><span style="color:#676E95;">//    hexSettings: {dimensions: {\u2026}, orientation: &#39;FLAT&#39;, origin: {\u2026}, offset: -1}</span></span>
<span class="line"><span style="color:#676E95;">//    coordinates: (4) [Hex, Hex, Hex, Hex]</span></span>
<span class="line"><span style="color:#676E95;">// }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(grid)</span></span>
<span class="line"><span style="color:#676E95;">// {&quot;hexSettings&quot;:{&quot;dimensions&quot;:{&quot;xRadius&quot;:50,&quot;yRadius&quot;:50},&quot;orientation&quot;:&quot;FLAT&quot;,&quot;origin&quot;:{&quot;x&quot;:0,&quot;y&quot;:0},&quot;offset&quot;:-1},&quot;coordinates&quot;:[{&quot;q&quot;:0,&quot;r&quot;:0},{&quot;q&quot;:1,&quot;r&quot;:0},{&quot;q&quot;:0,&quot;r&quot;:1},{&quot;q&quot;:1,&quot;r&quot;:1}]}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="deserializing" tabindex="-1">Deserializing <a class="header-anchor" href="#deserializing" aria-hidden="true">#</a></h2><p>When you want to turn a string returned by <code>JSON.stringify(grid)</code> into a grid again, you have to pass it to <code>JSON.parse()</code> first and then to the <code>fromJSON()</code> static method of <code>Grid</code>:</p><div class="language-typescript line-numbers-mode"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> grid1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Grid</span><span style="color:#A6ACCD;">(Hex</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">rectangle</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> serializedGrid </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#A6ACCD;">(grid1)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> deserializedGrid </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#A6ACCD;">(serializedGrid)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// this returns a grid with the same Hex class and hexes as grid1</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> grid2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Grid</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fromJSON</span><span style="color:#A6ACCD;">(deserializedGrid)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,8),p=[l];function t(r,i,c,y,d,A){return a(),n("div",null,p)}const F=s(o,[["render",t]]);export{C as __pageData,F as default};
